{"ast":null,"code":"var _jsxFileName = \"/Users/rohanchaudhari/Downloads/Plant-Disease-Prediction-Master/Client/src/components/Report/Report.js\";\n//import React from \"react\";\n//import \"./Report.css\";\n//import { Heading } from \"@chakra-ui/react\";\n//import { FaTimesCircle } from \"react-icons/fa\";\n//import axios from \"axios\"; // Import Axios\n//\n//export default function Report(props) {\n//  const isHealthy = props.disease_name.toLowerCase().includes(\"healthy\");\n//  const closeReport = () => {\n//    document.querySelector(\".disease_report\").classList.add(\"hidden\");\n//    if (props.set_disease_name) {\n//      props.set_disease_name(\"\");\n//    }\n//  };\n//\n//  const openDiseaseInformation = async (diseaseName) => {\n//    try {\n//      const response = await axios.get(`http://127.0.0.1:5000/disease/${encodeURIComponent(diseaseName)}`);\n//      if (response.status === 200) {\n//        const data = response.data;\n//        if (data) {\n//          // Assuming data contains disease information and effects\n//          // You can customize this part based on your backend response\n//          alert(`Disease Name: ${data.name}\\nSymptoms: ${data.symptoms}\\nCauses: ${data.causes}`);\n//        } else {\n//          alert(\"Disease information not found\");\n//        }\n//      } else {\n//        throw new Error(\"Network response was not ok\");\n//      }\n//    } catch (error) {\n//      console.error(\"Error:\", error);\n//    }\n//  };\n//\n//  return (\n//    <div className=\"disease_report hidden\">\n//      <div className=\"report_content\">\n//        <FaTimesCircle className=\"closeReportButton\" onClick={closeReport} />\n//        <div className=\"report_header\">\n//          <Heading as=\"h2\" size=\"2xl\">\n//            Plant Name:{\" \"}\n//            {props.disease_name && props.disease_name.split(\"__\")[0]}\n//          </Heading>\n//          <Heading as=\"h2\" size=\"2xl\" marginTop=\"10\">\n//            Disease Name:{\" \"}\n//            {props.disease_name &&\n//              props.disease_name.split(\"__\")[1].replace(/_/g, \" \")}\n//          </Heading>\n//        </div>\n//        <div className=\"disease_image\">\n//          <img\n//            src={props.image && URL.createObjectURL(props.image)}\n//            alt=\"plant disease\"\n//          />\n//        </div>\n//        <div className=\"show_more\">\n//          <button\n//            className=\"checkBtn\"\n//            onClick={() => {\n//              openDiseaseInformation(props.disease_name);\n//            }}\n//          >\n//            {isHealthy ? \"This plant is healthy\" : \"Show Informations\"}\n//          </button>\n//        </div>\n//      </div>\n//    </div>\n//  );\n//}\nimport React from \"react\";\nimport \"./Report.css\";\nimport { Heading } from \"@chakra-ui/react\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Report(props) {\n  const isHealthy = props.disease_name.toLowerCase().includes(\"healthy\");\n  const closeReport = () => {\n    document.querySelector(\".disease_report\").classList.add(\"hidden\");\n    if (props.set_disease_name) {\n      props.set_disease_name(\"\");\n    }\n  };\n  const openDiseaseInformation = async diseaseName => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/disease/${encodeURIComponent(diseaseName)}`);\n      if (response.status === 200) {\n        const {\n          disease,\n          effects\n        } = response.data;\n        if (disease && effects.length > 0) {\n          // Extracting specific attributes from disease\n          const name = disease.name;\n          const symptoms = disease.symptoms;\n          const causes = disease.causes;\n          // Extracting specific attribute from effects\n          const effectDescriptions = effects.map(effect => effect.description);\n          // Displaying the information\n          alert(`Disease Name: ${name}\\nSymptoms: ${symptoms}\\nCauses: ${causes}\\nEffects: ${effectDescriptions.join(', ')}`);\n        } else {\n          alert(\"Disease information not found\");\n        }\n      } else {\n        throw new Error(\"Network response was not ok\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"disease_report hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report_content\",\n      children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {\n        className: \"closeReportButton\",\n        onClick: closeReport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report_header\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          size: \"2xl\",\n          children: [\"Plant Name:\", \" \", props.disease_name && props.disease_name.split(\"__\")[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          size: \"2xl\",\n          marginTop: \"10\",\n          children: [\"Disease Name:\", \" \", props.disease_name && props.disease_name.split(\"__\")[1].replace(/_/g, \" \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disease_image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image && URL.createObjectURL(props.image),\n          alt: \"plant disease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show_more\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"checkBtn\",\n          onClick: () => {\n            openDiseaseInformation(props.disease_name);\n          },\n          children: isHealthy ? \"This plant is healthy\" : \"Show Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_c = Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["React","Heading","FaTimesCircle","axios","jsxDEV","_jsxDEV","Report","props","isHealthy","disease_name","toLowerCase","includes","closeReport","document","querySelector","classList","add","set_disease_name","openDiseaseInformation","diseaseName","response","get","encodeURIComponent","status","disease","effects","data","length","name","symptoms","causes","effectDescriptions","map","effect","description","alert","join","Error","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","as","size","split","marginTop","replace","src","image","URL","createObjectURL","alt","_c","$RefreshReg$"],"sources":["/Users/rohanchaudhari/Downloads/Plant-Disease-Prediction-Master/Client/src/components/Report/Report.js"],"sourcesContent":["//import React from \"react\";\r\n//import \"./Report.css\";\r\n//import { Heading } from \"@chakra-ui/react\";\r\n//import { FaTimesCircle } from \"react-icons/fa\";\r\n//import axios from \"axios\"; // Import Axios\r\n//\r\n//export default function Report(props) {\r\n//  const isHealthy = props.disease_name.toLowerCase().includes(\"healthy\");\r\n//  const closeReport = () => {\r\n//    document.querySelector(\".disease_report\").classList.add(\"hidden\");\r\n//    if (props.set_disease_name) {\r\n//      props.set_disease_name(\"\");\r\n//    }\r\n//  };\r\n//\r\n//  const openDiseaseInformation = async (diseaseName) => {\r\n//    try {\r\n//      const response = await axios.get(`http://127.0.0.1:5000/disease/${encodeURIComponent(diseaseName)}`);\r\n//      if (response.status === 200) {\r\n//        const data = response.data;\r\n//        if (data) {\r\n//          // Assuming data contains disease information and effects\r\n//          // You can customize this part based on your backend response\r\n//          alert(`Disease Name: ${data.name}\\nSymptoms: ${data.symptoms}\\nCauses: ${data.causes}`);\r\n//        } else {\r\n//          alert(\"Disease information not found\");\r\n//        }\r\n//      } else {\r\n//        throw new Error(\"Network response was not ok\");\r\n//      }\r\n//    } catch (error) {\r\n//      console.error(\"Error:\", error);\r\n//    }\r\n//  };\r\n//\r\n//  return (\r\n//    <div className=\"disease_report hidden\">\r\n//      <div className=\"report_content\">\r\n//        <FaTimesCircle className=\"closeReportButton\" onClick={closeReport} />\r\n//        <div className=\"report_header\">\r\n//          <Heading as=\"h2\" size=\"2xl\">\r\n//            Plant Name:{\" \"}\r\n//            {props.disease_name && props.disease_name.split(\"__\")[0]}\r\n//          </Heading>\r\n//          <Heading as=\"h2\" size=\"2xl\" marginTop=\"10\">\r\n//            Disease Name:{\" \"}\r\n//            {props.disease_name &&\r\n//              props.disease_name.split(\"__\")[1].replace(/_/g, \" \")}\r\n//          </Heading>\r\n//        </div>\r\n//        <div className=\"disease_image\">\r\n//          <img\r\n//            src={props.image && URL.createObjectURL(props.image)}\r\n//            alt=\"plant disease\"\r\n//          />\r\n//        </div>\r\n//        <div className=\"show_more\">\r\n//          <button\r\n//            className=\"checkBtn\"\r\n//            onClick={() => {\r\n//              openDiseaseInformation(props.disease_name);\r\n//            }}\r\n//          >\r\n//            {isHealthy ? \"This plant is healthy\" : \"Show Informations\"}\r\n//          </button>\r\n//        </div>\r\n//      </div>\r\n//    </div>\r\n//  );\r\n//}\r\nimport React from \"react\";\r\nimport \"./Report.css\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Report(props) {\r\n  const isHealthy = props.disease_name.toLowerCase().includes(\"healthy\");\r\n  const closeReport = () => {\r\n    document.querySelector(\".disease_report\").classList.add(\"hidden\");\r\n    if (props.set_disease_name) {\r\n      props.set_disease_name(\"\");\r\n    }\r\n  };\r\n\r\n  const openDiseaseInformation = async (diseaseName) => {\r\n    try {\r\n      const response = await axios.get(`http://127.0.0.1:5000/disease/${encodeURIComponent(diseaseName)}`);\r\n      if (response.status === 200) {\r\n        const { disease, effects } = response.data;\r\n        if (disease && effects.length > 0) {\r\n          // Extracting specific attributes from disease\r\n          const name = disease.name;\r\n          const symptoms = disease.symptoms;\r\n          const causes = disease.causes;\r\n          // Extracting specific attribute from effects\r\n          const effectDescriptions = effects.map(effect => effect.description);\r\n          // Displaying the information\r\n          alert(`Disease Name: ${name}\\nSymptoms: ${symptoms}\\nCauses: ${causes}\\nEffects: ${effectDescriptions.join(', ')}`);\r\n        } else {\r\n          alert(\"Disease information not found\");\r\n        }\r\n      } else {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"disease_report hidden\">\r\n      <div className=\"report_content\">\r\n        <FaTimesCircle className=\"closeReportButton\" onClick={closeReport} />\r\n        <div className=\"report_header\">\r\n          <Heading as=\"h2\" size=\"2xl\">\r\n            Plant Name:{\" \"}\r\n            {props.disease_name && props.disease_name.split(\"__\")[0]}\r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"2xl\" marginTop=\"10\">\r\n            Disease Name:{\" \"}\r\n            {props.disease_name &&\r\n              props.disease_name.split(\"__\")[1].replace(/_/g, \" \")}\r\n          </Heading>\r\n        </div>\r\n        <div className=\"disease_image\">\r\n          <img\r\n            src={props.image && URL.createObjectURL(props.image)}\r\n            alt=\"plant disease\"\r\n          />\r\n        </div>\r\n        <div className=\"show_more\">\r\n          <button\r\n            className=\"checkBtn\"\r\n            onClick={() => {\r\n              openDiseaseInformation(props.disease_name);\r\n            }}\r\n          >\r\n            {isHealthy ? \"This plant is healthy\" : \"Show Information\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}